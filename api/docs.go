// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/ads": {
            "get": {
                "description": "That endpoint retrieve all registered ads in system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ads"
                ],
                "summary": "Get all ads",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page get data",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pageSize get data",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort get data",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order get data",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "min price get data",
                        "name": "minPrice",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "max price get data",
                        "name": "maxPrice",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.AdsResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.Massage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.Massage"
                        }
                    }
                }
            }
        },
        "/api/ads/create": {
            "post": {
                "description": "That methods create new ads in system if you authorized",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ads"
                ],
                "summary": "Create new ads",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ads title",
                        "name": "title",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ads description",
                        "name": "description",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ads price",
                        "name": "price",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ads image url",
                        "name": "image_url",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.Massage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.Massage"
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "description": "This endpoint provides access to parts of the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "login into system",
                "parameters": [
                    {
                        "type": "string",
                        "description": "your username",
                        "name": "username",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "your password",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Massage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.Massage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.Massage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.Massage"
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "description": "this endpoint prevents access to parts of the system under your session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "logout from system",
                "parameters": [
                    {
                        "type": "string",
                        "description": "access token",
                        "name": "access_token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "refresh token",
                        "name": "refresh_token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "205": {
                        "description": "Reset Content",
                        "schema": {
                            "$ref": "#/definitions/dto.Massage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.Massage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.Massage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.Massage"
                        }
                    }
                }
            }
        },
        "/api/refresh": {
            "post": {
                "description": "This endpoint extends access to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "access token",
                        "name": "access_token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "refresh token",
                        "name": "refresh_token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.Massage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.Massage"
                        }
                    }
                }
            }
        },
        "/api/signup": {
            "post": {
                "description": "This endpoint logs you into the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign up",
                "parameters": [
                    {
                        "type": "string",
                        "description": "your username",
                        "name": "username",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "your password",
                        "name": "password",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "your email",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.Massage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.Massage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AdsResponse": {
            "type": "object",
            "properties": {
                "author_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "descripstion": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "is_mine": {
                    "type": "boolean"
                },
                "price": {
                    "type": "number"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.Massage": {
            "type": "object",
            "properties": {
                "massage": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Swagger marketplace API",
	Description:      "This is a sample server marketplace server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
